<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
    <!--1.扫描类包，将标注Spring注解的类自动转化为Bean ,同时完成Bean的注入 -->
    <!--    <context:component-scan base-package="com.smart"/>-->
    <context:component-scan base-package="com.smart.dao"/>
    <context:component-scan base-package="com.smart.web"/>
    <context:component-scan base-package="com.smart.domain"/>


    <!-- 扫描service类包 应用Spring的注解配置-->
    <context:component-scan base-package="com.smart.service"/>

    <!--配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!--通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务  我写的-->
<!--    <aop:config proxy-target-class="true">-->
<!--        <aop:pointcut id="serviceMethod"-->
<!--                      expression=" (execution(* com.smart.service..*.*(..)))-->
<!--and (@annotation(org.springframework.transaction.annotation.Transactional))"/>-->
<!--        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>-->
<!--    </aop:config>-->
<!--    -->
<!--    -->

    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceMethod"
                      expression="(execution(* com.smart.service..*(..))) and (@annotation(org.springframework.transaction.annotation.Transactional))" />
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
    </aop:config>




    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!--2.定义一个使用DBCP实现的数据源-->
    <!--    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"-->
    <!--          destroy-method="close"-->
    <!--          p:driverClassName="com.mysql.jdbc.Driver"-->
    <!--          p:url="jdbc:mysql://localhost:3306/sampledb"-->
    <!--          p:username="root"-->
    <!--          p:password="12345678"/>-->
    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:url="jdbc:mysql://localhost:3306/sampledb"
          p:username="root"
          p:password="12345678" />

    <!-- 3.定义JDBC模板Bean -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"/>


    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:viewClass="org.springframework.web.servlet.view.JstlView"
          p:prefix="/WEB_INF/jsp/"
          p:suffix=".jsp"/>
</beans>
